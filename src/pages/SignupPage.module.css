/* SignupPage.module.css */

.signupPage {
    display: flex;
    align-items: center;
    justify-content: flex-start; /* Aligns children to the start, sticking to the left */
    position: relative; /* Needed for absolute positioning of children */
    background: url(/img/bg.png) no-repeat center center;
    background-size: cover; /* Cover is usually better for full-screen backgrounds */
    min-height: 100vh;
    font-family: 'Arial', sans-serif;
    padding-left: 5%; /* Only padding-left to push the content from the edge */
    padding-right: 5%; /* Only padding-right to push the content from the edge */
  }

  .contentContainer {
    display: flex;
    justify-content: flex-start; /* Aligns children to the start */
    align-items: center; /* Vertically aligns the children in the middle */
    width: 100%; /* Takes the full width of the parent */
    max-width: 1200px; /* Max width can be adjusted as needed */
    height: 100%; /* Takes the full height of the parent */
    margin: auto; /* Center the container itself */
  }  
  
  .registrationForm {
    background-color: #FFFFFF;
    color: #C05F41;
    padding: 2em;
    border-radius: 30px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    margin-top: 80px;
    margin-right: 20px; /* Adjust margin to create space between form and character */
    text-align: left;
    width: 520px;
    height: 560px;
    margin-right: 20px; /* Space between form and character */
    display: flex;
    flex: 0 0 520px; /* Do not grow, do not shrink, and start with 520px width */
    flex-direction: column; /* Stack the children vertically */
    align-items: center; /* Center-align the children horizontally */
  }

  .registrationForm h2 {
    font-size: 1.1rem;
    font-weight: bold;
  }
  .registrationForm p {
    font-size: 0.9rem;
  }
  .registrationForm h2,
  .registrationForm p,
  .registrationForm label {
    text-align: left; /* Align text to the left for these elements */
    width: 100%; /* Ensure they span the full width of the registrationForm */
  }

  .formContainer {
    color: black;
    font-size: 1rem;
    width: 100%; /* Full width of the registration form */
    display: flex;
    flex-direction: column; /* Stack the form elements */
    align-items: flex-start; /* Center-align the form elements */
  }
  
  .formGroup {
    color: black;
    font-size: 1rem;
    width: 100%; /* Full width for alignment */
    text-align: left; /* Align text to the left for contents in formGroup */
    margin-bottom: 1em; /* Space between form groups */
    display: flex; /* This will allow you to align the label and input side by side */
    flex-direction: column; /* Stack elements vertically */
    align-items: flex-start; /* Align children to the start (left side) */
  }
  
  .roleSelection {
    text-align: left;
    display: flex; /* Align buttons in a row */
    justify-content: flex-start; /* Align buttons to the left */
    flex-wrap: wrap; /* Wrap buttons to next line if needed */
  }
  
  .roleButton {
    border: 1px solid #ddd; /* Thicker border */
    background-color: #fff;
    border-radius: 5px;
    cursor: pointer;
    outline: none;
    transition: background-color 0.3s, border-color 0.3s; /* Smooth transition for hover and focus */
    width: 111px;
    height: 39px;
    font-size: 0.9rem; /* Larger font size */
  }
  
  .roleButton:hover,
  .roleButton:focus {
    background-color: #C05F41; /* Subtle hover effect */
    border-color: #bbb; /* Change border color on hover */
  }
  
  .roleButton.active {
    background-color: #5C6BC0; /* Active color */
    color: white;
    border-color: #5C6BC0; /* Border color for active button */
  }
  
  .dobInputs {
    display: flex;
    justify-content: center; /* Center the DOB input fields */
    margin-top: 0.5em; /* Add some space between the label and the input fields */
    gap: 10px;
  }
  
  .dobInputs input {
    text-align: center;
    font-size: 0.9rem; /* Larger font size */
    flex: 1;
    border: 1px solid #ddd;
    border-radius: 4px; /* Rounded corners */
    outline: none; /* Remove default focus outline */
    width: 111px;
    height: 39px;
  }
  
  .dobInputs input:focus {
    border-color: #5C6BC0; /* Highlight on focus */
  }
  
  .continueButton {
    width: 172px;
    height: 40px;
    padding: 12px; /* Slightly larger padding */
    background-color: #C05F41;
    color: white;
    font-size: 0.9rem;
    font-weight: bold;
    border: none;
    border-radius: 40px;
    margin-top: 1em;
    cursor: pointer;
    transition: background-color 0.3s; /* Smooth transition for hover */
  }
  
  .continueButton:hover {
    background-color: #3949AB;
  }
  
  .loginLink {
    display: block;
    color: #C05F41;
    font-weight: 16px;
    text-decoration: none;
    text-align: center;
    margin-top: 1em;
    font-size: 0.9rem; /* Adjust font size */
  }
  
  .characterContainer {
    flex: 1;
    display: flex;
    justify-content: center; /* Center the character image horizontally */
    align-items: center; /* Align the character image vertically */
    flex-direction: column; /* Stack children vertically */
    padding-left: 20px; /* If needed, to ensure space between the form and character */
  }
  
  .characterImage {
    margin-left: auto; /* Centers the image in the character container */
    margin-right: auto; /* Centers the image in the character container */
    max-width: 100%; /* Ensures image does not overflow its container */
    width: 412px;
    height: auto; /* Maintains the aspect ratio of the image */
  }
  
  .speechBubble {
    position: relative; /* Position relative to the characterContainer */
    bottom: 20px; /* Adjust as needed to place above the character image */
    /* Center the speech bubble horizontally */
    margin-bottom: 20px;
    max-width: 100%; /* Ensure they do not overflow their container */
    width: auto; /* Let the width be determined by the content */
    height: auto; /* Maintain the aspect ratio of the images */
  }
  
  .textBubbleImage {
    width: 285px;
    height: 80px;
  }